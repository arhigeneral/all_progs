(defrule startup
=>
(printout t "Uslovie:" crlf)
(printout t " VETKA" crlf)
(printout t "+ VETKA" crlf)
(printout t "-------" crlf)
(printout t "=DEREVO" crlf)
(assert 
(number 0)
(number 1)
(number 2)
(number 3)
(number 4)
(number 5)
(number 6)
(number 7)
(number 8)
(letter A)
(letter O)
(letter K)
(letter V)
(letter T)
(letter E)
(letter R)
(letter D)))

(defrule generate_combintaion
(number ?x)
(letter ?y)
=>
(assert (combination ?y ?x)))

(defrule find_solution
(combination A ?a)
(combination O ?o&~?a)
(combination K ?k&~?a&~?o)
(combination V ?v&~?a&~?o&~?k)
(combination T ?t&~?a&~?o&~?k&~?v)
(combination E ?e&~?a&~?o&~?k&~?v&~?t)
(combination R ?r&~?a&~?o&~?k&~?v&~?t&~?e)
(combination D ?d&~?a&~?o&~?k&~?v&~?t&~?e&~?r)
(test (= (mod (+ ?a ?a) 10) ?o))
(test (= (mod (+ ?a ?a (* 10 ?k) (* 10 ?k)) 100) (+ (* 10 ?v) ?o)))
(test (= (mod (+ ?a ?a (* 10 ?k) (* 10 ?k) (* 100 ?t) (* 100 ?t)) 1000) (+ (* 100 ?e) (* 10 ?v) ?o)))
(test (= (mod (+ ?a ?a (* 10 ?k) (* 10 ?k) (* 100 ?t) (* 100 ?t) (* 1000 ?e) (* 1000 ?e)) 10000) (+ (* 1000 ?r) (* 100 ?e) (* 10 ?v) ?o)))
(test (= (+ ?a ?a (* 10 ?k) (* 10 ?k) (* 100 ?t) (* 100 ?t) (* 1000 ?e) (* 1000 ?e)(* 10000 ?v) (* 10000 ?v)) (+ (* 100000 ?d) (* 10000 ?e) (* 1000 ?r) (* 100 ?e) (* 10 ?v) ?o)))
=>
(printout t "Reshenie:" crlf)
(printout t "A = " ?a crlf)
(printout t "O = " ?o crlf)
(printout t "K = " ?k crlf)
(printout t "V = " ?v crlf)
(printout t "T = " ?t crlf)
(printout t "E = " ?e crlf)
(printout t "R = " ?r crlf)
(printout t "D = " ?d crlf)
(printout t " " ?v ?e ?t ?k ?a crlf)
(printout t "+ " ?v ?e ?t ?k ?a crlf)
(printout t "---------" crlf)
(printout t "=" ?d ?e ?r ?e ?v ?o crlf)
(printout t " " crlf))