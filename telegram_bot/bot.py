import telebot
import config
import random

from telebot import types
from telebot import apihelper

bot = telebot.TeleBot(config.token)
apihelper.proxy = {'https':'socks5://207.154.240.228:9050'}

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/sticker1.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("–ù–µ –ø–æ–π—Ç–∏ –ª–∏ –≤–∞–º –Ω–∞—Ö—É–π?)")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ—Ç–æ–º—É —á—Ç–æ -".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
    sti = open('static/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0,100)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            item3 = types.InlineKeyboardButton("–°—Ä–µ–¥–Ω–µ",callback_data='midle')
            item4 = types.InlineKeyboardButton("–û—Ç–ª–∏—á–Ω–æ, –∫–∞–∫ —Å–∞–º?", callback_data='perfect')

            markup.add(item1, item2, item3, item4)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            elif call.data == 'midle':
                bot.send_message(call.message.chat.id, '–ù—É –∏ –ø–æ—à–µ–ª —Ç—ã –Ω–∞—Ö—É–π!')
            elif call.data == 'perfect':
                bot.send_message(call.message.chat.id, '–ù–µ –≤—ã–µ–±—ã–≤–∞–π—Å—è —á–µ—Ä—Ç!')


            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))

# RUN
bot.polling(none_stop=True)
